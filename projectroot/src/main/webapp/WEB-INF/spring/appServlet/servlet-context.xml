<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:security="http://www.springframework.org/schema/security"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security-3.2.xsd">
 
 	<security:global-method-security pre-post-annotations="enabled" />
 
    <!-- DispatcherServlet Context: defines this servlet's request-processing 
        infrastructure -->
 
    <!-- Enables the Spring MVC @Controller programming model -->
    <annotation-driven />
 
    <!-- Handles HTTP GET requests for /resources/** by efficiently serving 
        up static resources in the ${webappRoot}/resources directory -->
    <resources mapping="/resources/**" location="/resources/" />
 
    <!-- Resolves views selected for rendering by @Controllers to .jsp resources 
        in the /WEB-INF/views directory -->
    <beans:bean
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/" />
        <beans:property name="suffix" value=".jsp" />
    </beans:bean>
 
    <beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close">
        <beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <beans:property name="url"
            value="jdbc:mysql://localhost:3306/test" />
        <beans:property name="username" value="root" />
        <beans:property name="password" value="" />
    </beans:bean>
 
    <!-- Hibernate 4 SessionFactory Bean definition -->
    <beans:bean id="hibernate4AnnotatedSessionFactory"
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <beans:property name="dataSource" ref="dataSource" />
        <beans:property name="annotatedClasses">
            <beans:list>
                <beans:value>com.cebedo.pmsys.project.model.Project</beans:value>
                <beans:value>com.cebedo.pmsys.field.model.Field</beans:value>
                <beans:value>com.cebedo.pmsys.field.model.FieldAssignment</beans:value>
                <beans:value>com.cebedo.pmsys.staff.model.Staff</beans:value>
                <beans:value>com.cebedo.pmsys.staff.model.ManagerAssignment</beans:value>
                <beans:value>com.cebedo.pmsys.staff.model.StaffTeamAssignment</beans:value>
                <beans:value>com.cebedo.pmsys.staff.model.StaffFieldAssignment</beans:value>
                <beans:value>com.cebedo.pmsys.team.model.Team</beans:value>
                <beans:value>com.cebedo.pmsys.team.model.TeamAssignment</beans:value>
                <beans:value>com.cebedo.pmsys.task.model.Task</beans:value>
                <beans:value>com.cebedo.pmsys.projectfile.model.ProjectFile</beans:value>
                <beans:value>com.cebedo.pmsys.systemconfiguration.model.SystemConfiguration</beans:value>
                <beans:value>com.cebedo.pmsys.photo.model.Photo</beans:value>
                <beans:value>com.cebedo.pmsys.task.model.TaskTeamAssignment</beans:value>
                <beans:value>com.cebedo.pmsys.task.model.TaskStaffAssignment</beans:value>
                <beans:value>com.cebedo.pmsys.task.model.TaskFieldAssignment</beans:value>
                <beans:value>com.cebedo.pmsys.systemuser.model.SystemUser</beans:value>
                <beans:value>com.cebedo.pmsys.company.model.Company</beans:value>
                <beans:value>com.cebedo.pmsys.security.securityaccess.model.SecurityAccess</beans:value>
                <beans:value>com.cebedo.pmsys.security.securityrole.model.SecurityRole</beans:value>
<!--                 <beans:value>com.cebedo.pmsys.subcontractor.model.Subcontractor</beans:value> -->
<!--                 <beans:value>com.cebedo.pmsys.cashflow.expense.model.Expense</beans:value> -->
            </beans:list>
        </beans:property>
        <beans:property name="hibernateProperties">
            <beans:props>
                <beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
                </beans:prop>
                <beans:prop key="hibernate.show_sql">true</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>
     
    <beans:bean id="projectDAO" class="com.cebedo.pmsys.project.dao.ProjectDAOImpl">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
    <beans:bean id="projectService" class="com.cebedo.pmsys.project.service.ProjectServiceImpl">
        <beans:property name="projectDAO" ref="projectDAO"></beans:property>
        <beans:property name="companyDAO" ref="companyDAO"></beans:property>
    </beans:bean>
    
    <beans:bean id="staffDAO" class="com.cebedo.pmsys.staff.dao.StaffDAOImpl">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
    <beans:bean id="staffService" class="com.cebedo.pmsys.staff.service.StaffServiceImpl">
        <beans:property name="staffDAO" ref="staffDAO"></beans:property>
        <beans:property name="projectDAO" ref="projectDAO"></beans:property>
        <beans:property name="teamDAO" ref="teamDAO"></beans:property>
    </beans:bean>
    
    <beans:bean id="teamDAO" class="com.cebedo.pmsys.team.dao.TeamDAOImpl">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
    <beans:bean id="teamService" class="com.cebedo.pmsys.team.service.TeamServiceImpl">
        <beans:property name="teamDAO" ref="teamDAO"></beans:property>
        <beans:property name="projectDAO" ref="projectDAO"></beans:property>
    </beans:bean>
    
    <beans:bean id="securityAccessDAO" class="com.cebedo.pmsys.security.securityaccess.dao.SecurityAccessDAOImpl">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
    <beans:bean id="securityAccessService" class="com.cebedo.pmsys.security.securityaccess.service.SecurityAccessServiceImpl">
        <beans:property name="securityAccessDAO" ref="securityAccessDAO"></beans:property>
    </beans:bean>
    
    <beans:bean id="securityRoleDAO" class="com.cebedo.pmsys.security.securityrole.dao.SecurityRoleDAOImpl">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
    <beans:bean id="securityRoleService" class="com.cebedo.pmsys.security.securityrole.service.SecurityRoleServiceImpl">
        <beans:property name="securityRoleDAO" ref="securityRoleDAO"></beans:property>
    </beans:bean>
    
    <beans:bean id="taskDAO" class="com.cebedo.pmsys.task.dao.TaskDAOImpl">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
    <beans:bean id="taskService" class="com.cebedo.pmsys.task.service.TaskServiceImpl">
        <beans:property name="taskDAO" ref="taskDAO"></beans:property>
        <beans:property name="staffDAO" ref="staffDAO"></beans:property>
        <beans:property name="teamDAO" ref="teamDAO"></beans:property>
        <beans:property name="projectDAO" ref="projectDAO"></beans:property>
    </beans:bean>
    
    <beans:bean id="fieldDAO" class="com.cebedo.pmsys.field.dao.FieldDAOImpl">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
    <beans:bean id="fieldService" class="com.cebedo.pmsys.field.service.FieldServiceImpl">
        <beans:property name="fieldDAO" ref="fieldDAO"></beans:property>
        <beans:property name="projectDAO" ref="projectDAO"></beans:property>
        <beans:property name="taskDAO" ref="taskDAO"></beans:property>
        <beans:property name="staffDAO" ref="staffDAO"></beans:property>
    </beans:bean>
    
    <beans:bean id="projectFileDAO" class="com.cebedo.pmsys.projectfile.dao.ProjectFileDAOImpl">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
    <beans:bean id="projectFileService" class="com.cebedo.pmsys.projectfile.service.ProjectFileServiceImpl">
        <beans:property name="projectFileDAO" ref="projectFileDAO"></beans:property>
        <beans:property name="projectDAO" ref="projectDAO"></beans:property>
        <beans:property name="systemConfigurationDAO" ref="systemConfigurationDAO"></beans:property>
    </beans:bean>
    
    <beans:bean id="systemConfigurationDAO" class="com.cebedo.pmsys.systemconfiguration.dao.SystemConfigurationDAOImpl">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
    <beans:bean id="systemConfigurationService" class="com.cebedo.pmsys.systemconfiguration.service.SystemConfigurationServiceImpl">
        <beans:property name="systemConfigurationDAO" ref="systemConfigurationDAO"></beans:property>
    </beans:bean>
    
<!--     <beans:bean id="subcontractorDAO" class="com.cebedo.pmsys.subcontractor.dao.SubcontractorDAOImpl"> -->
<!--         <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" /> -->
<!--     </beans:bean> -->
<!--     <beans:bean id="subcontractorService" class="com.cebedo.pmsys.subcontractor.service.SubcontractorServiceImpl"> -->
<!--         <beans:property name="subcontractorDAO" ref="subcontractorDAO"></beans:property> -->
<!--     </beans:bean> -->
    
    <beans:bean id="systemUserDAO" class="com.cebedo.pmsys.systemuser.dao.SystemUserDAOImpl">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
    <beans:bean id="systemUserService" class="com.cebedo.pmsys.systemuser.service.SystemUserServiceImpl">
        <beans:property name="systemUserDAO" ref="systemUserDAO"></beans:property>
    </beans:bean>
    
    <beans:bean id="companyDAO" class="com.cebedo.pmsys.company.dao.CompanyDAOImpl">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
    <beans:bean id="companyService" class="com.cebedo.pmsys.company.service.CompanyServiceImpl">
        <beans:property name="companyDAO" ref="companyDAO"></beans:property>
    </beans:bean>
    
    <beans:bean id="photoDAO" class="com.cebedo.pmsys.photo.dao.PhotoDAOImpl">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
    <beans:bean id="photoService" class="com.cebedo.pmsys.photo.service.PhotoServiceImpl">
        <beans:property name="photoDAO" ref="photoDAO"></beans:property>
        <beans:property name="projectDAO" ref="projectDAO"></beans:property>
        <beans:property name="staffDAO" ref="staffDAO"></beans:property>
        <beans:property name="systemConfigurationDAO" ref="systemConfigurationDAO"></beans:property>
    </beans:bean>
    
    <context:component-scan base-package="com.cebedo.pmsys" />
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
    
    <beans:bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
         <!-- setting maximum upload size -->
        <beans:property name="maxUploadSize" value="20000000" />
    </beans:bean>
 
</beans:beans>