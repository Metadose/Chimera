<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:amq="http://activemq.apache.org/schema/core"
    xmlns:jms="http://www.springframework.org/schema/jms"
    xmlns:c="http://www.springframework.org/schema/c"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:hdiv="http://www.hdiv.org/schema/hdiv"
    xmlns:cache="http://www.springframework.org/schema/cache"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
		http://www.springframework.org/schema/cache
		http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://activemq.apache.org/schema/core
		http://activemq.apache.org/schema/core/activemq-core-5.2.0.xsd
		http://www.hdiv.org/schema/hdiv
		http://www.hdiv.org/schema/hdiv/hdiv.xsd
		http://www.springframework.org/schema/jms
		http://www.springframework.org/schema/jms/spring-jms-2.5.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security-3.2.xsd">
		
	<context:property-placeholder location="classpath:system.properties"/>
	<beans:bean id="auditLogDAO" class="com.cebedo.pmsys.dao.AuditLogDAOImpl">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
    
    
    
	<!-- *********************************************************** -->
	<!-- *********************************************************** -->
	<!-- ACTIVEMQ ************************************************** -->
	<!-- *********************************************************** -->
	<!-- *********************************************************** -->
	<!-- Activemq connection factory -->
    <beans:bean id="amqConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <beans:constructor-arg index="0" value="${amq.broker.url.tcp}"/>
    </beans:bean>
 
    <!-- ConnectionFactory Definition -->
    <beans:bean id="connectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory"
    	p:sessionCacheSize="10">
        <beans:constructor-arg ref="amqConnectionFactory" />
    </beans:bean>
 
    <!--  Default Destination Queue Definition-->
    <beans:bean id="defaultDestination" class="org.apache.activemq.command.ActiveMQQueue">
        <beans:constructor-arg index="0" value="system.uncategorized.message"/>
    </beans:bean>
 
    <!-- JmsTemplate Definition -->
    <beans:bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <beans:property name="connectionFactory" ref="connectionFactory" />
        <beans:property name="defaultDestination" ref="defaultDestination" />
    </beans:bean>
 
    <!-- Message Sender/Listener Definition -->
    <beans:bean id="messageSender" class="com.cebedo.pmsys.sender.MessageSender">
        <beans:constructor-arg index="0" ref="jmsTemplate" />
    </beans:bean>
    
	<beans:bean id="messageListener" class="com.cebedo.pmsys.listener.MessageListenerImpl"/>
	<beans:bean id="auditMessageListener" class="com.cebedo.pmsys.listener.AuditMessageListener">
		<beans:property name="auditLogDAO" ref="auditLogDAO"></beans:property>
	</beans:bean>
	<beans:bean id="logMessageListener" class="com.cebedo.pmsys.listener.LogMessageListener"/>
    <jms:listener-container
	      container-type="default"
	      connection-factory="connectionFactory"
	      acknowledge="transacted">
	    <jms:listener destination="system.uncategorized.message" ref="messageListener" method="onMessage" />
	    <jms:listener destination="system.audit" ref="auditMessageListener" method="onMessage" />
	    <jms:listener destination="system.log.tail" ref="logMessageListener" method="onMessage" />
	</jms:listener-container>
	  
    
    
    
	<!-- *********************************************************** -->
	<!-- *********************************************************** -->
	<!-- REDIS ***************************************************** -->
	<!-- *********************************************************** -->
	<!-- *********************************************************** -->
	<cache:annotation-driven />
		<beans:bean id="jedisConnFactory" 
		    class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		    p:host-name="${redis.host}"
	       	p:port="${redis.port}"
		    p:use-pool="true"/>
		
		<!-- Redis template definition and cache manager-->
		<beans:bean id="redisTemplate" 
		    class="org.springframework.data.redis.core.RedisTemplate" 
		    p:connection-factory-ref="jedisConnFactory"
		    p:keySerializer-ref="redisSerializer"/>
		    
		<beans:bean id="redisSerializer" 
		    class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
	        
	        
	
 
 	<!-- *********************************************************** -->
 	<!-- *********************************************************** -->
 	<!-- SPRING SECURITY ******************************************* -->
 	<!-- *********************************************************** -->
 	<!-- *********************************************************** -->
 	<!-- This is where we configure Spring-Security  -->
	<security:http auto-config="false" use-expressions="true" access-denied-page="/auth/denied"
			entry-point-ref="authenticationEntryPoint" >
		
		<!-- CSRF Protection -->
		<!-- Turned this off, protection is already redundant since HDIV also has CSRF protection. -->
		<!-- <security:csrf/> -->
		
		<!--  -->
		<security:headers>
			<security:frame-options policy="SAMEORIGIN" />
			<security:cache-control />
			<security:content-type-options />
			<security:xss-protection enabled="true" block="true"/>
			<!-- SSL Purposes -->
			<!-- <security:hsts disable="true"/> -->
		</security:headers>
				
		<!-- Permit everyone to see the login page and the js css resources -->
		<security:intercept-url pattern="/auth/**" access="permitAll"/>
		
		<!-- These are just general access security, a finer security level resides in the Controller and JSP -->
		<security:intercept-url pattern="/company/**" access="isAuthenticated()"/>
		<security:intercept-url pattern="/dashboard/**" access="isAuthenticated()"/>
		<security:intercept-url pattern="/fix/**" access="isAuthenticated()"/>
		<security:intercept-url pattern="/project/**" access="isAuthenticated()"/>
		<security:intercept-url pattern="/staff/**" access="isAuthenticated()"/>
		<security:intercept-url pattern="/config/**" access="isAuthenticated()"/>
		<security:intercept-url pattern="/systemuser/**" access="isAuthenticated()"/>
		<security:intercept-url pattern="/task/**" access="isAuthenticated()"/>
		
		<security:logout 
				invalidate-session="true" 
				logout-success-url="/auth/login" 
				logout-url="/auth/logout"/>
	
		<security:custom-filter ref="blacklistFilter" before="FILTER_SECURITY_INTERCEPTOR"/>
		<security:custom-filter ref="authenticationFilter" position="FORM_LOGIN_FILTER"/>
		<security:custom-filter after="SECURITY_CONTEXT_FILTER" ref="hdivFilter" />
	</security:http>
	
	<!-- Custom filters -->
	<beans:bean id="hdivFilter" class="org.hdiv.filter.ValidatorFilter" />
 	<beans:bean id="blacklistFilter" class="com.cebedo.pmsys.filter.BlacklistFilter" />
 	<beans:bean id="authenticationFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"
  		p:authenticationManager-ref="customAuthenticationManager"
  		p:postOnly="true"
  		p:authenticationFailureHandler-ref="customAuthenticationFailureHandler"
  		p:authenticationSuccessHandler-ref="customAuthenticationSuccessHandler" />
  		
	<!-- Custom authentication manager. In order to authenticate, username and password must not be the same -->
	<beans:bean id="customAuthenticationManager" class="com.cebedo.pmsys.manager.CustomAuthenticationManager" />
 	
 	<!-- We just actually need to set the default failure url here -->
 	<beans:bean id="customAuthenticationFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler"
 		p:defaultFailureUrl="/auth/login/error" />
 		
 	 <!-- We just actually need to set the default target url here -->
 	<beans:bean id="customAuthenticationSuccessHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler"
 		p:defaultTargetUrl="/dashboard/" />
 	
 	<!-- The AuthenticationEntryPoint is responsible for redirecting the user to a particular page, like a login page,
 			whenever the server sends back a response requiring authentication -->
 	<!-- See Spring-Security Reference 5.4.1 for more info -->
 	<beans:bean id="authenticationEntryPoint"  class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint"
	 	p:loginFormUrl="/auth/login"/>

	<!-- The tag below has no use but Spring Security needs it to autowire the parent property of 
			org.springframework.security.authentication.ProviderManager. Otherwise we get an error 
			A probable bug. This is still under investigation-->
	<security:authentication-manager/>
	 	
 	<security:global-method-security pre-post-annotations="enabled" />
 
 
 
 
 	<!-- *********************************************************** -->
 	<!-- *********************************************************** -->
 	<!-- OTHER CONFIGS ********************************************* -->
 	<!-- *********************************************************** -->
 	<!-- *********************************************************** -->
    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
    <!-- Enables the Spring MVC @Controller programming model -->
    <annotation-driven />
 
    <!-- Handles HTTP GET requests for /resources/** by efficiently serving 
        up static resources in the ${webappRoot}/resources directory -->
    <resources mapping="/resources/**" location="/resources/" />
 
    <!-- Resolves views selected for rendering by @Controllers to .jsp resources 
        in the /WEB-INF/views directory -->
    <beans:bean
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/" />
        <beans:property name="suffix" value=".jsp" />
    </beans:bean>
 
    <beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close">
        <beans:property name="driverClassName" value="${jdbc.driver}" />
        <beans:property name="url" value="${jdbc.url}" />
        <beans:property name="username" value="${jdbc.username}" />
        <beans:property name="password" value="${jdbc.password}" />
    </beans:bean>
 
    <!-- Hibernate 4 SessionFactory Bean definition -->
    <beans:bean id="hibernate4AnnotatedSessionFactory"
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <beans:property name="dataSource" ref="dataSource" />
        <beans:property name="annotatedClasses">
            <beans:list>
                <beans:value>com.cebedo.pmsys.model.Project</beans:value>
                <beans:value>com.cebedo.pmsys.model.Field</beans:value>
                <beans:value>com.cebedo.pmsys.model.assignment.FieldAssignment</beans:value>
                <beans:value>com.cebedo.pmsys.model.Staff</beans:value>
                <beans:value>com.cebedo.pmsys.model.Task</beans:value>
                <beans:value>com.cebedo.pmsys.model.SystemConfiguration</beans:value>
                <beans:value>com.cebedo.pmsys.model.assignment.TaskStaffAssignment</beans:value>
                <beans:value>com.cebedo.pmsys.model.SystemUser</beans:value>
                <beans:value>com.cebedo.pmsys.model.Company</beans:value>
                <beans:value>com.cebedo.pmsys.model.AuditLog</beans:value>
            </beans:list>
        </beans:property>
        <beans:property name="hibernateProperties">
            <beans:props>
                <beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
                </beans:prop>
                <beans:prop key="hibernate.show_sql">false</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>
     
    <!-- Project -->
    <beans:bean id="projectDAO" class="com.cebedo.pmsys.dao.ProjectDAOImpl">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
    <beans:bean id="projectService" class="com.cebedo.pmsys.service.impl.ProjectServiceImpl">
        <beans:property name="projectDAO" ref="projectDAO"></beans:property>
        <beans:property name="companyDAO" ref="companyDAO"></beans:property>
        <beans:property name="projectAuxValueRepo" ref="projectAuxValueRepo"></beans:property>
    </beans:bean>
    
    <!-- Project Payroll Computer -->
    <beans:bean id="projectPayrollComputerService" class="com.cebedo.pmsys.service.impl.ProjectPayrollComputerServiceImpl">
    	<beans:property name="attendanceService" ref="attendanceService"></beans:property>
        <beans:property name="staffService" ref="staffService"></beans:property> 
    </beans:bean>
    
    <!-- Staff -->
    <beans:bean id="staffDAO" class="com.cebedo.pmsys.dao.StaffDAOImpl">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
    <beans:bean id="staffService" class="com.cebedo.pmsys.service.impl.StaffServiceImpl">
        <beans:property name="staffDAO" ref="staffDAO"></beans:property>
        <beans:property name="projectDAO" ref="projectDAO"></beans:property>
    </beans:bean>
    
    <!-- Task -->
    <beans:bean id="taskDAO" class="com.cebedo.pmsys.dao.TaskDAOImpl">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
    <beans:bean id="taskService" class="com.cebedo.pmsys.service.impl.TaskServiceImpl">
        <beans:property name="taskDAO" ref="taskDAO"></beans:property>
        <beans:property name="staffDAO" ref="staffDAO"></beans:property>
        <beans:property name="projectDAO" ref="projectDAO"></beans:property>
    </beans:bean>
    
    <!-- Field -->
    <beans:bean id="fieldDAO" class="com.cebedo.pmsys.dao.FieldDAOImpl">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
    <beans:bean id="fieldService" class="com.cebedo.pmsys.service.impl.FieldServiceImpl">
        <beans:property name="fieldDAO" ref="fieldDAO"></beans:property>
        <beans:property name="projectDAO" ref="projectDAO"></beans:property>
    </beans:bean>
    
	<!-- System Configuration -->    
    <beans:bean id="systemConfigurationDAO" class="com.cebedo.pmsys.dao.SystemConfigurationDAOImpl">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
    <beans:bean id="systemConfigurationService" class="com.cebedo.pmsys.service.impl.SystemConfigurationServiceImpl">
        <beans:property name="systemConfigurationDAO" ref="systemConfigurationDAO"></beans:property>
    </beans:bean>
    
    <!-- Audit Log -->
    <beans:bean id="auditLogService" class="com.cebedo.pmsys.service.impl.AuditLogServiceImpl">
        <beans:property name="auditLogDAO" ref="auditLogDAO"></beans:property>
    </beans:bean>
    
    <!-- System User -->
    <beans:bean id="systemUserDAO" class="com.cebedo.pmsys.dao.SystemUserDAOImpl">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
    <beans:bean id="systemUserService" class="com.cebedo.pmsys.service.impl.SystemUserServiceImpl">
        <beans:property name="systemUserDAO" ref="systemUserDAO"></beans:property>
        <beans:property name="staffDAO" ref="staffDAO"></beans:property>
        <beans:property name="systemConfigurationDAO" ref="systemConfigurationDAO"></beans:property>
    </beans:bean>
    
    <!-- Company -->
    <beans:bean id="companyDAO" class="com.cebedo.pmsys.dao.CompanyDAOImpl">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
    <beans:bean id="companyService" class="com.cebedo.pmsys.service.impl.CompanyServiceImpl">
        <beans:property name="companyDAO" ref="companyDAO"></beans:property>
    </beans:bean>
    
    
    
    
    <!-- *********************************************************** -->
 	<!-- *********************************************************** -->
 	<!-- REDIS OBJECTS ********************************************* -->
 	<!-- *********************************************************** -->
 	<!-- *********************************************************** -->
    
    <!-- Estimate Cost -->
    <beans:bean id="estimateCostService" class="com.cebedo.pmsys.service.impl.EstimateCostServiceImpl"></beans:bean>
    <beans:bean id="estimateCostValueRepo" class="com.cebedo.pmsys.repository.EstimateCostValueRepo"></beans:bean>
    
    <!-- Expense -->
    <beans:bean id="expenseService" class="com.cebedo.pmsys.service.impl.ExpenseServiceImpl"></beans:bean>
    <beans:bean id="expenseValueRepo" class="com.cebedo.pmsys.repository.ExpenseValueRepo"></beans:bean>

    <!-- Equipment Expense -->
    <beans:bean id="equipmentExpenseService" class="com.cebedo.pmsys.service.impl.EquipmentExpenseServiceImpl"></beans:bean>
    <beans:bean id="equipmentExpenseValueRepo" class="com.cebedo.pmsys.repository.EquipmentExpenseValueRepo"></beans:bean>
    
 	<!-- Material -->
    <beans:bean id="materialService" class="com.cebedo.pmsys.service.impl.MaterialServiceImpl">
        <beans:property name="materialValueRepo" ref="materialValueRepo"></beans:property>
        <beans:property name="deliveryValueRepo" ref="deliveryValueRepo"></beans:property>
        <beans:property name="projectAuxService" ref="projectAuxService"></beans:property>
        <beans:property name="pullOutValueRepo" ref="pullOutValueRepo"></beans:property>
    </beans:bean>
    <beans:bean id="materialValueRepo" class="com.cebedo.pmsys.repository.MaterialValueRepo">
        <beans:property name="redisTemplate" ref="redisTemplate" />
    </beans:bean>
    
    <!-- Estimate -->
    <beans:bean id="estimateService" class="com.cebedo.pmsys.service.impl.EstimateServiceImpl">
        <beans:property name="estimationOutputValueRepo" ref="estimationOutputValueRepo"></beans:property>
    </beans:bean>
    
    <!-- Estimation Output -->
    <beans:bean id="estimationOutputService" class="com.cebedo.pmsys.service.impl.EstimationOutputServiceImpl">
        <beans:property name="estimationOutputValueRepo" ref="estimationOutputValueRepo"></beans:property>
    </beans:bean>
    <beans:bean id="estimationOutputValueRepo" class="com.cebedo.pmsys.repository.EstimationOutputValueRepo">
        <beans:property name="redisTemplate" ref="redisTemplate" />
    </beans:bean>
    
    <!-- Project Auxillary -->
    <beans:bean id="projectAuxService" class="com.cebedo.pmsys.service.impl.ProjectAuxServiceImpl">
        <beans:property name="projectAuxValueRepo" ref="projectAuxValueRepo"></beans:property>
    </beans:bean>
    <beans:bean id="projectAuxValueRepo" class="com.cebedo.pmsys.repository.ProjectAuxValueRepo">
        <beans:property name="redisTemplate" ref="redisTemplate" />
    </beans:bean>
    
    <!-- Delivery -->
    <beans:bean id="deliveryService" class="com.cebedo.pmsys.service.impl.DeliveryServiceImpl">
        <beans:property name="deliveryValueRepo" ref="deliveryValueRepo"></beans:property>
        <beans:property name="projectAuxValueRepo" ref="projectAuxValueRepo"></beans:property>
        <beans:property name="materialValueRepo" ref="materialValueRepo"></beans:property>
        <beans:property name="pullOutValueRepo" ref="pullOutValueRepo"></beans:property>
    </beans:bean>
    <beans:bean id="deliveryValueRepo" class="com.cebedo.pmsys.repository.DeliveryValueRepo">
        <beans:property name="redisTemplate" ref="redisTemplate" />
    </beans:bean>
    
    <!-- Pull-Out -->
    <beans:bean id="pullOutService" class="com.cebedo.pmsys.service.impl.PullOutServiceImpl">
        <beans:property name="pullOutValueRepo" ref="pullOutValueRepo"></beans:property>
        <beans:property name="staffDAO" ref="staffDAO"></beans:property>
        <beans:property name="materialValueRepo" ref="materialValueRepo"></beans:property>
    </beans:bean>
    <beans:bean id="pullOutValueRepo" class="com.cebedo.pmsys.repository.PullOutValueRepo">
        <beans:property name="redisTemplate" ref="redisTemplate" />
    </beans:bean>
    
    <!-- Project Payroll -->
    <beans:bean id="projectPayrollValueRepo" class="com.cebedo.pmsys.repository.ProjectPayrollValueRepo">
        <beans:property name="redisTemplate" ref="redisTemplate" />
    </beans:bean>
    <beans:bean id="projectPayrollService" class="com.cebedo.pmsys.service.impl.ProjectPayrollServiceImpl"> 
        <beans:property name="projectPayrollValueRepo" ref="projectPayrollValueRepo"></beans:property>
        <beans:property name="projectPayrollComputerService" ref="projectPayrollComputerService"></beans:property>
        <beans:property name="staffDAO" ref="staffDAO"></beans:property>
        <beans:property name="projectAuxService" ref="projectAuxService"></beans:property>
    </beans:bean>
    
    <!-- Attendance -->
    <beans:bean id="attendanceValueRepo" class="com.cebedo.pmsys.repository.AttendanceValueRepo">
        <beans:property name="redisTemplate" ref="redisTemplate" />
    </beans:bean>
    <beans:bean id="attendanceService" class="com.cebedo.pmsys.service.impl.AttendanceServiceImpl"> 
        <beans:property name="attendanceValueRepo" ref="attendanceValueRepo"></beans:property>
    </beans:bean>
    
    
    
    
    <!-- *********************************************************** -->
 	<!-- *********************************************************** -->
 	<!-- ETC ******************************************************* -->
 	<!-- *********************************************************** -->
 	<!-- *********************************************************** -->
    <context:component-scan base-package="com.cebedo.pmsys" />
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
	<beans:bean id="contextApplicationContextProvider" class="com.cebedo.pmsys.helper.ApplicationContextProvider"></beans:bean>
    
</beans:beans>